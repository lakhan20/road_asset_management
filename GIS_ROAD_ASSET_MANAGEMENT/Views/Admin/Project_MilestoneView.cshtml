@{
    Layout = "~/Views/Shared/_Layout2.cshtml";
}


@*@model List<GIS_ROAD_ASSET_MANAGEMENT.Models.MilestoneViewModel>*@
@*@model List<GIS_ROAD_ASSET_MANAGEMENT.Models.MilestoneViewModel>*@
@model List<GIS_ROAD_ASSET_MANAGEMENT.Models.MilestoneViewModel>
<!DOCTYPE html>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/css/bootstrap.min.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.3/css/dataTables.bootstrap5.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/2.3.0/css/searchPanes.bootstrap5.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/2.0.0/css/select.bootstrap5.css">

    <link rel="stylesheet" href="https://cdn.datatables.net/2.0.5/css/dataTables.dataTables.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/searchpanes/2.3.1/css/searchPanes.dataTables.css">
    <link rel="stylesheet" href="https://cdn.datatables.net/select/2.0.1/css/select.dataTables.css">

    <style>
        .container {
            width: 100%;
            max-width: none;
            padding-right: 15px;
            padding-left: 15px;
            margin-right: auto;
            margin-left: auto;
        }

        .btn-custom {
            background-color: #393939;
            color: #fff; /* Text color */
        }

        #mileidDiv {
            display: none;
        }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="d-flex">
            <a class="navbar-brand mr-auto" href="#"><h2>Project Milestone</h2></a>
            <button class="btn btn-custom" id="mg" data-bs-toggle="modal" data-bs-target="#exampleModal1" onclick="addMilestoneClick(this);"><i class="fas fa-folder-plus"></i> Add Milestone</button>
            <button class="btn btn-custom mx-2" id="getCSV">
                <i class="fas fa-file-csv"></i> Export to CSV
            </button>
            <button class="btn btn-custom mx-2" id="getPDF">
                <i class="fas fa-file-pdf"></i> Export to PDF
            </button>
        </div>
    </div>

    <form>
        <div class="modal fade" id="exampleModal1" aria-hidden="true" aria-labelledby="exampleModalToggleLabel" tabindex="-1">
            <!-- Modal 1 content -->
            <div class="modal-dialog modal-dialog-centered modal-lg">
                <!-- Added modal-lg class for large size -->
                <div class="modal-content">
                    <div class="modal-header" style="background-color: #000 ">
                        <h1 class="modal-title fs-5" id="exampleModalToggleLabel" style="color: #fff">Update Details</h1>
                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="row mb-3">
                            <div class="col">
                                <label for="proj" class="form-label">Project</label>
                                <select class="form-select" id="project_id">
                                    <option selected value="0">Select Project...</option>
                                    @foreach (var milestoneViewModel in Model)
                                    {

                                        foreach (var projectModel in milestoneViewModel.projectList)
                                        {
                                            <option value="@projectModel.project_id">@projectModel.project_title</option>
                                        }
                                    }

                                </select>
                            </div>
                        </div>
                        <div class="row mb-3">
                            <div class="col">
                                <label for="milestonename" class="form-label">Milestone Name</label>
                                <input type="text" class="form-control" id="milestone_name">
                            </div>
                            <div class="col">
                                <label for="desc" class="form-label">Description</label>
                                <input type="text" class="form-control" id="description">
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label for="image" class="form-label">Image</label>
                                <input type="file" class="form-control" id="img_">
                            </div>
                            <div class="col">
                                <label for="doc" class="form-label">Document</label>
                                <input type="file" class="form-control" id="doc">
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label for="startdate" class="form-label">Start Date</label>
                                <input type="date" class="form-control" id="start_date">
                            </div>
                            <div class="col">
                                <label for="enddate" class="form-label">End Date</label>
                                <input type="date" class="form-control" id="end_date">
                            </div>
                        </div>

                        <div class="row mb-3">
                            <div class="col">
                                <label for="remarks" class="form-label">Remarks</label>
                                <input type="text" class="form-control" id="remarks">
                            </div>
                            <div class="col">
                                <label for="status" class="form-label">Milestone Status</label>
                                <select class="form-select" id="milestone_status">
                                    <option selected value="0">Select Milestone Status...</option>
                                    <option value="1">In-progress</option>
                                    <option value="2">Pending</option>
                                    <option value="3">Completed</option>
                                    <option value="4">Not-Yet-Started</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" id="submitMilestone" style="background-color: #282828; border-color: black;" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    </form>
    <div class="container">
        <div class="table-responsive mt-4">
            <table id="table_d" class="table table-striped nowrap" style="width:100%">
                <thead>
                    <tr>
                        <th>Sr No</th>
                        <th>Project Title</th>
                        <th>Milestone Name</th>
                        <th>Description</th>
                        <th>Image</th>
                        <th>Document</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Remarks</th>
                        <th>Status</th>
                        <th>Update</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var counter = 0;
                    }

                    @foreach (var milestoneViewModel in Model)
                    {

                        //var counter = 1;
                        foreach (var milestoneModel in milestoneViewModel.milestoneList)
                        {
                            counter++;
                            <tr>
                                <input type="hidden" class="projectid" value="@milestoneModel.project_id" />
                                <input type="hidden" class="doc_s" value="@milestoneModel.document_s" />
                                <input type="hidden" class="image_s" value="@milestoneModel.image_s" />
                                <input type="hidden" class="mileid" value="@milestoneModel.milestone_id" />
                                <td>@counter</td>
                                <td>@milestoneModel.project_title</td>
                                <td>@milestoneModel.milestone_name</td>
                                <td>@milestoneModel.description</td>
                                <td><a download="~/image/@milestoneModel.image_s" href="~/document/@milestoneModel.image_s">Image</a></td>

                                <td><a download="~/document/@milestoneModel.document_s" href="~/document/@milestoneModel.document_s">Download</a></td>
                                <td>@milestoneModel.start_date</td>
                                <td>@milestoneModel.end_date</td>
                                <td>@milestoneModel.remarks</td>
                                <td>@milestoneModel.milestone_status</td>
                                @* <td><input type="hidden" id="mileid" value="@milestoneModel.milestone_id" /></td>*@

                                <td>
                                    <button data-bs-toggle="modal" data-bs-target="#exampleModal1" type="button" onclick="editMilestone(this);" class="btn btn-primary">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                </td>

                            </tr>
                        }
                    }

                </tbody>
                @*<tfoot>
                        <tr>
                            <th>Sr No</th>
                            <th>Project Title</th>
                            <th>Milestone Name</th>
                            <th>Description</th>
                            <th>Image</th>
                            <th>Document</th>
                            <th>Start Date</th>
                            <th>End Date</th>
                            <th>Remarks</th>
                            <th>Status</th>
                            <th>Update</th>
                        </tr>
                    </tfoot>*@

            </table>
        </div>
    </div>
    <script src="https://code.jquery.com/jquery-3.7.1.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script src="https://cdn.datatables.net/2.0.3/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/2.0.3/js/dataTables.bootstrap5.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.14/jspdf.plugin.autotable.min.js"></script>

    <script src="https://cdn.datatables.net/2.0.5/js/dataTables.js"></script>
    <script src="https://cdn.datatables.net/searchpanes/2.3.1/js/dataTables.searchPanes.js "></script>
    <script src="https://cdn.datatables.net/searchpanes/2.3.1/js/searchPanes.dataTables.js"></script>
    <script src="https://cdn.datatables.net/select/2.0.1/js/dataTables.select.js"></script>
    <script src="https://cdn.datatables.net/select/2.0.1/js/select.dataTables.js"></script>

    <script>
        //function editMilestone(btn) {
        //    var mileid = btn.closest('tr').querySelector(".mileid").value;
        //    var projectid = btn.closest('tr').querySelector(".projectid").value;
        //    var sdateString = $(btn).closest('tr').find('td:eq(6)').text().trim();
        //    console.log("sdatestring : ", sdateString);



        //    $('#project_id').val(projectid);
        //    $('#milestone_name').val($(btn).closest('tr').find('td:eq(2)').text().trim());
        //    //$('#start_date').val();


        //}
        var isEdit = false;
        var mileid;
        var doc_s;
        var image_s;
        function editMilestone(btn) {

            isEdit = true;

            mileid = btn.closest('tr').querySelector(".mileid").value;

            var projectid = btn.closest('tr').querySelector(".projectid").value;
            doc_s = btn.closest('tr').querySelector(".doc_s").value;
            image_s = btn.closest('tr').querySelector(".image_s").value;

            //console.log("docs", doc_s);
            //console.log("image_s", image_s);
            //alert(doc_s);



            // Extract the date strings for start_date and end_date
            var sdateString = $(btn).closest('tr').find('td:eq(6)').text().trim();
            var edateString = $(btn).closest('tr').find('td:eq(7)').text().trim();

            //console.log("sdatestring : ", sdateString);
            //console.log("edatestring : ", edateString);

            // Function to parse and format date strings
            function parseAndFormatDateString(dateString) {
                var parts = dateString.split(' ')[0].split('/'); // Split date and time, then date by '/'
                //console.log("Date parts:", parts);
                var date = new Date(parts[2], parts[1] - 1, parts[0]); // Month is 0-based

                // Check if the Date object is valid
                if (isNaN(date.getTime())) {
                    console.log("Invalid date format");
                    return null;
                }

                // Extract year, month, and day from the date object
                var year = date.getFullYear();
                var month = date.getMonth() + 1; // Month is zero-based, so add 1
                var day = date.getDate();

                // Format month and day with leading zeros if necessary
                month = (month < 10) ? '0' + month : month;
                day = (day < 10) ? '0' + day : day;

                // Construct the date string in the format expected by the input field (YYYY-MM-DD)
                return year + '-' + month + '-' + day;
            }

            // Parse and format the start_date string
            var formattedStartDate = parseAndFormatDateString(sdateString);
            // Parse and format the end_date string
            var formattedEndDate = parseAndFormatDateString(edateString);

            // Set the value of the start_date input field
            document.getElementById('start_date').value = formattedStartDate;

            // Set the value of the end_date input field
            document.getElementById('end_date').value = formattedEndDate;

            // Set other values if needed
            $('#project_id').val(projectid);
            $('#milestone_name').val($(btn).closest('tr').find('td:eq(2)').text().trim());
            $('#description').val($(btn).closest('tr').find('td:eq(3)').text().trim());
            $('#remarks').val($(btn).closest('tr').find('td:eq(8)').text().trim());
            var status = $(btn).closest('tr').find('td:eq(9)').text().trim()
            //console.log("status_id ", status)
            if (status == "In progress") {
                var status = "1";
            }
            else if (status == "Pending") {
                var status = "2";
            }
            else if (status == "Completed") {
                var status = "3";
            }
            else if (status == "Not Yet Started") {
                var status = "4";
            }
            $('#milestone_status').val(status);


        }


        function addMilestoneClick() {
            //alert("milestone clicked");
            $('#project_id').val(0);
            $('#milestone_name').val("");
            $('#description').val("");
            $('#remarks').val("");
            $('#milestone_status').val(0);
            document.getElementById('start_date').value = "";
            document.getElementById('end_date').value = "";
        }
        // Initialize DataTable
        $("[id$=submitMilestone]").on("click", function () {
            if (!isEdit) {
                var form_data = new FormData();
                form_data.append("project_id", $("[id$=project_id]").val());
                form_data.append("milestone_name", $("[id$=milestone_name]").val());
                form_data.append("description", $("[id$=description]").val());
                form_data.append("start_date", $("[id$=start_date]").val());
                form_data.append("end_date", $("[id$=end_date]").val());
                form_data.append("remarks", $("[id$=remarks]").val());
                var img = document.getElementById("img_").files[0]; //file
                var doc = document.getElementById("doc").files[0];//file


                form_data.append("image", img);
                form_data.append("document", doc)
                form_data.append("milestone_status", $("[id$=milestone_status]").val());
                $.ajax({
                    type: "POST",
                    url: "/Admin/addMilestone",
                    data: form_data,
                    processData: false,  // Don't process the data
                    contentType: false,  // Don't set contentType
                    success: function (response) {
                        alert("Milestone Added successfully...!!");
                        console.log(response);
                        //window.location.href = "/Admin/Project_MonitoringView";
                    },
                    error: (err) => {
                        console.log("err : ", err);
                        alert(err);
                    }

                });
            }
            else {
                //alert(mileid);
                var form_data = new FormData();
                form_data.append("milestone_id", mileid);
                form_data.append("project_id", $("[id$=project_id]").val());
                form_data.append("milestone_name", $("[id$=milestone_name]").val());
                form_data.append("description", $("[id$=description]").val());
                form_data.append("start_date", $("[id$=start_date]").val());
                form_data.append("end_date", $("[id$=end_date]").val());
                form_data.append("remarks", $("[id$=remarks]").val());

                var img = document.getElementById("img_").files[0]; //file
                var doc = document.getElementById("doc").files[0];//file

                if (img != undefined) {
                    form_data.append("image", img)
                }
                else {
                    form_data.append("image_s", image_s);

                }
                if (doc != undefined) {
                    form_data.append("document", doc);
                }
                else {
                    form_data.append("document_s", doc_s);
                }
                form_data.append("milestone_status", $("[id$=milestone_status]").val());
                $.ajax({
                    type: "POST",
                    url: "/Admin/updateMilestone",
                    data: form_data,
                    processData: false,  // Don't process the data
                    contentType: false,  // Don't set contentType
                    success: function (response) {
                        alert("Milestone updated successfully...!!");
                        console.log(response);
                        //window.location.href = "/Admin/Project_MonitoringView";
                    },
                    error: (err) => {
                        console.log("err : ", err);
                        alert(err);
                    }

                });
            }


        });

        $(document).ready(function () {
            var dt = new DataTable('#table_d', {
                columnDefs: [
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [1] // Filter only the "Project Title" column
                    },
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [2] // Filter only the "Milestone Name" column
                    },
                    {
                        searchPanes: {
                            show: true
                        },
                        targets: [9] // Filter only the "Status" column
                    },
                ],
                layout: {
                    top1: {
                        searchPanes: {
                            viewTotal: true,
                            columns: [1, 2, 9] // Include "Project Title", "Milestone Name", "Remarks", and "Status" columns in the search panes
                        }
                    }
                },
                select: {
                    style: 'os',
                    selector: 'td:first-child'
                },
                order: [[0, 'asc']] // Ordering based on "Project Title"
            });

            dt.on('select.dt', () => {
                dt.searchPanes.rebuildPane(0, true);
            });

            dt.on('deselect.dt', () => {
                dt.searchPanes.rebuildPane(0, true);
            });
        });





        document.getElementById("getCSV").addEventListener("click", function () {
            // Get the table
            var table = document.getElementById("table_d");

            // Prepare the CSV data
            var csv = "";
            for (var i = 0; i < table.rows.length - 1; i++) {
                var rowData = [];
                var cells = table.rows[i].cells;
                for (var j = 0; j < cells.length - 1; j++) { // Exclude the last cell
                    if (j != 4 && j != 5) {
                        rowData.push(cells[j].innerText);
                    }
                }
                csv += rowData.join(",") + "\n";
            }

            // Create a Blob object from the CSV string
            var blob = new Blob([csv], { type: "text/csv;charset=utf-8;" });

            // Create a download link
            var link = document.createElement("a");
            link.href = URL.createObjectURL(blob);
            link.download = "table_data.csv";

            // Append the link to the body and trigger the click event
            document.body.appendChild(link);
            link.click();

            // Cleanup
            document.body.removeChild(link);
        });

        document.getElementById("getPDF").addEventListener("click", function () {
            // Get the table
            var table = document.getElementById("table_d");

            // Initialize jsPDF
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();

            // Prepare the data
            var data = [];
            for (var i = 1; i < table.rows.length - 1; i++) {
                var rowData = [];
                var cells = table.rows[i].cells;
                for (var j = 0; j < cells.length - 1; j++) { // Exclude the last cell
                    if (j != 4 && j != 5) {
                        rowData.push(cells[j].innerText);
                    }
                }
                data.push(rowData);
            }

            //Set the table columns
            var columns = [];
            var headerCells = table.rows[0].cells;
            for (var i = 0; i < headerCells.length - 1; i++) { // Exclude the last header
                if (i != 4 && i != 5) {
                    columns.push(headerCells[i].innerText);
                }
            }

            // Add the table to the PDF
            doc.autoTable({
                head: [columns],
                body: data
            });

            // Save the PDF
            doc.save('table_data.pdf');
        });


    </script>

</body>
</html>
